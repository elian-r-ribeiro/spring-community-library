üí° Desafio: Sistema de Gest√£o de Biblioteca Comunit√°ria

üéØ Objetivo
Criar uma API em Spring Boot que gerencie uma biblioteca comunit√°ria, permitindo o empr√©stimo de livros, o controle de devolu√ß√µes, o cadastro de usu√°rios e um hist√≥rico de atividades.

üß± Estrutura do Projeto

Entidades principais:

1. User
- id: Long
- name: String
- email: String
- registrationDate: LocalDate
- active: boolean

2. Book
- id: Long
- title: String
- author: String
- isbn: String
- availableCopies: int
- totalCopies: int
- createdAt: LocalDate

3. Loan
- id: Long
- user: User
- book: Book
- loanDate: LocalDate
- returnDate: LocalDate? (nulo enquanto o livro n√£o √© devolvido)
- returned: boolean

4. ActivityLog
- id: Long
- action: String
- timestamp: LocalDateTime

üîß Funcionalidades obrigat√≥rias

CRUDs b√°sicos
- Usu√°rios: criar, listar, editar, excluir.
- Livros: criar, listar, editar, excluir.

Funcionalidades extras
- Empr√©stimos:
  - Criar um novo empr√©stimo (reduz availableCopies do livro).
  - Marcar devolu√ß√£o (aumenta availableCopies).
  - Impedir empr√©stimo se availableCopies == 0.
- Logs autom√°ticos:
  - Cada empr√©stimo ou devolu√ß√£o gera uma entrada no ActivityLog.
- Consulta personalizada:
  - Listar todos os livros emprestados por um usu√°rio.
  - Listar todos os empr√©stimos em aberto.
  - Listar os logs das √∫ltimas 24h.

üß© Desafios t√©cnicos
- Relacionamentos: @ManyToOne entre Loan ‚Üí User e Loan ‚Üí Book
- Transa√ß√µes: atualizar livro e salvar log no mesmo fluxo.
- Valida√ß√µes: impedir empr√©stimo duplicado e email √∫nico.

üöÄ Extens√µes opcionais
- Filtros com Spring Data JPA
- Pagina√ß√£o e ordena√ß√£o
- Spring Security (b√°sico)
- Swagger
- Docker Compose com PostgreSQL

üí¨ Exemplo de endpoints
| M√©todo | Endpoint | Descri√ß√£o |
|--------|-----------|-----------|
| POST | /users | Cria um usu√°rio |
| GET | /books | Lista todos os livros |
| POST | /loans | Cria um empr√©stimo |
| PATCH | /loans/{id}/return | Marca devolu√ß√£o |
| GET | /users/{id}/loans | Lista empr√©stimos de um usu√°rio |
| GET | /logs/recent | Mostra logs recentes |

üóÉÔ∏è Banco de Dados sugerido
PostgreSQL com Spring Data JPA
